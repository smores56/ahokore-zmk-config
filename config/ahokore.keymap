#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM_LMOD 1
#define NUM_RMOD 2
#define NAV 3
#define FN 4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <140>;
};

/ {
    behaviors {
         dot_exclam: dot_exclam {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCLAM";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma_qmark: comma_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&mt COMMA>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <80>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <80>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
            layers = <0>;
        };

        combo_minus {
            timeout-ms = <80>;
            key-positions = <26 27>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };

        combo_underscore {
            timeout-ms = <80>;
            key-positions = <26 28>;
            bindings = <&kp UNDERSCORE>;
            layers = <0>;
        };

        combo_colon {
            timeout-ms = <80>;
            key-positions = <7 8>;
            bindings = <&kp COLON>;
            layers = <0>;
        };

        combo_semicolon {
            timeout-ms = <80>;
            key-positions = <1 2>;
            bindings = <&kp SEMICOLON>;
            layers = <0>;
        };

        combo_backslash {
            timeout-ms = <80>;
            key-positions = <28 29>;
            bindings = <&kp BSLH>;
            layers = <0>;
        };

        combo_grave {
            timeout-ms = <80>;
            key-positions = <27 28>;
            bindings = <&kp GRAVE>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                &kp Y &kp C &kp L &kp M        &kp K          &kp Z     &kp F        &kp U    &dot_exclam  &kp FSLH
                &kp I &kp S &kp R &kp T        &kp G          &kp P     &kp N        &kp E    &kp A        &kp O
                &kp Q &kp V &kp P &kp D        &kp J          &kp B     &kp H        &kp APOS &comma_qmark &kp X
                            &none &sl SYM_LMOD &lt NAV SPC    &sk RSHFT &sl NUM_RMOD &none
            >;
        };

        SYM_LMOD_layer {
            bindings = <
                &none     &kp LC(W)       &kp LC(Q)   &kp LC(T) &none        &kp LBRC  &kp DEL   &kp RBRC &kp HASH  &kp TILDE
                &sk LSHFT &sk LALT        &sk LCTRL   &sk LGUI  &kp PSCRN    &kp LPAR  &kp BSPC  &kp RPAR &kp LT    &kp PIPE
                &none     &kp LS(LC(TAB)) &kp LC(TAB) &none     &kp CAPS     &kp LBKT  &kp ENTER &kp RBKT &kp GT    &kp AT
                                          &none       &none     &none        &trans    &sl FN    &none
            >;
        };

        NUM_RMOD_layer {
            bindings = <
                &kp CARET &kp N7 &kp N8 &kp N9  &kp STAR     &none  &sk LS(RGUI) &kp LC(D) &kp LC(C) &kp LC(V)
                &kp AMPS  &kp N1 &kp N2 &kp N3  &kp EQUAL    &none  &sk RGUI     &sk RCTRL &sk RALT  &sk RSHFT
                &kp DLLR  &kp N4 &kp N5 &kp N6  &kp PLUS     &none  &none        &kp PRCNT &none     &none
                                 &none  &kp DOT &kp N0       &trans &none        &none
            >;
        };

        NAV_layer {
            bindings = <
                &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &kp C_MUTE    &none     &kp LG(D)     &kp LG(T)    &kp LG(Q)  &none
                &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT  &kp C_PP      &kp LG(R) &kp LG(DOWN)  &kp LG(DOWN) &kp LG(UP) &kp LG(UP)
                &kp HOME   &kp PG_DN    &kp PG_UP    &kp END    &kp C_STOP    &none     &kp LG(ENTER) &kp LG(O)    &kp LG(N)  &none
                                        &none        &none      &none         &trans    &none         &none
            >;
        };	

        FN_layer {
            bindings = <
                &none &kp F7 &kp F8 &kp F9 &kp F10    &none  &kp C_BRI_UP &kp C_BRI_DN &none        &none
                &none &kp F1 &kp F2 &kp F3 &kp F11    &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
                &none &kp F4 &kp F5 &kp F6 &kp F12    &none  &bt BT_CLR   &none        &none        &none
                             &none  &none  &none      &trans &none        &none
            >;
        };	
    };
};
